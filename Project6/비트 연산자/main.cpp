#include <iostream>

using namespace std;

int main()
{
	// 비트 연산자에는 여섯가지가 있다.
	// (1) ~, (2) &, (3) |, (4) ^, (5) >>, (6) <<

	// (1) ~ : Not 연산자, 
	// 0을 1로, 1을 0으로 바꿔주는 연산자
	int num = 0;
	cout << ~num << endl;
	// 위는,
	// 00000000000000000000000000000000 = 0
	// ~(00000000000000000000000000000000) = (11111111111111111111111111111111)
	// 11111111111111111111111111111111 -> twos complement -> 00000000000000000000000000000000 + 1
	// = 00000000000000000000000000000001 ==> 2의 보수를 취한값이 1이므로, 
	// ==> -1
	// 즉, ~0 = -1

	unsigned int num2 = 0;
	cout << ~num2 << endl;
	// ~(00000000000000000000000000000000) = 11111111111111111111111111111111 = 2^(32) - 1

	
	// (2) &
	// 1 & 1 == 1
	// 1 & 0 == 0
	// 0 & 1 == 0
	// 0 & 0 == 0
	cout << "\n& 연산자" << endl;
	int num2_0 = 5;
	int num2_1 = 10;
	int result = num2_0 & num2_1;
	cout << result << endl;
	// 00000101 & 00001010 == 00000000
	cout << (5 & 11) << endl; // 00000101 & 00001011

	// (4) |: Or 연산자

}